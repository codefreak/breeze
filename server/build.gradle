plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.70"
    id "org.jetbrains.kotlin.kapt" version "1.3.70"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.70"
    id "io.vertx.vertx-plugin" version "1.0.3"
    id 'com.google.cloud.tools.jib' version '2.4.0'
}

repositories {
    // for pty4j
    maven { url "https://jcenter.bintray.com" }
}

dependencies {
    // Vert.x (core is automatically applied by vertx-plugin)
    implementation "io.vertx:vertx-config:$vertxVersion"
    implementation "io.vertx:vertx-lang-kotlin:$vertxVersion"
    implementation "io.vertx:vertx-web:$vertxVersion"
    implementation "io.vertx:vertx-web-graphql:$vertxVersion"
    implementation "org.slf4j:slf4j-simple:1.7.30"

    // DI w/ Google Guice
    implementation 'com.englishtown.vertx:vertx-guice:2.3.1'
    implementation 'com.google.inject.extensions:guice-multibindings:4.2.3'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    // Terminal
    implementation "org.jetbrains.pty4j:pty4j:0.9.6"

    // GraphQL
    implementation "com.graphql-java:graphql-java-extended-scalars:1.0"
    implementation "com.graphql-java-kickstart:graphql-java-tools:6.0.2"

    // Docker
    implementation "com.github.docker-java:docker-java:3.2.1"
    implementation "com.github.docker-java:docker-java-transport-okhttp:3.2.1"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:2.2.19"
    implementation "com.github.davidmoten:rxjava2-extras:0.1.38"
    implementation "com.github.akarnokd:rxjava2-jdk8-interop:0.3.7"
}

vertx {
    redeploy = false
    mainVerticle = "java-guice:org.codefreak.breeze.GraphqlServerVerticle"
    config = "conf/config.json"
}

test {
    useJUnitPlatform()
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = "1.8" 
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = "1.8" 
	    javaParameters = true 
	}
}

task deployFrontend(type: Copy) {
    from project(':frontend').file('packages/app/build')
    // webroot is the default for the StaticHandler of Vertx
    into file('build/resources/main/webroot')
    dependsOn ':frontend:bundle'
}

jib {
    from {
        image = "openjdk:8-jre-alpine"
    }
    to {
        image = "cfreak/breeze"
    }
    container {
        entrypoint = [
                "java",
                "-cp",
                "/app/resources:/app/classes:/app/libs/*",
                "io.vertx.core.Launcher",
                "run",
                "java-guice:org.codefreak.breeze.GraphqlServerVerticle",
                "--conf",
                "/app/resources/conf/config.json"
        ]
        ports = ["8080"]
        // set image build date to current timestamp
        creationTime = "USE_CURRENT_TIMESTAMP"
    }
}
tasks.jibDockerBuild.dependsOn deployFrontend